94. Binary Tree Inorder Traversal

Given a binary tree, return the inorder traversal of its nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,3,2]

Follow up: Recursive solution is trivial, could you do it iteratively?

 public List<Integer> inorderTraversal(TreeNode root) {
	if(root == null){
		return Collections.EMPTY_LIST;
	}
	List<Integer> result = new ArrayList<>();
	Stack<TreeNode> stack = new Stack<>();
   // stack.push(root);
	TreeNode curNode = root;
	while(!stack.isEmpty() || curNode != null)
	{
		while(curNode != null)
		{
			stack.push(curNode);
			curNode = curNode.left;
		}
		curNode = stack.pop();
		result.add(curNode.val);
		curNode = curNode.right;
	}
	return result;
}