53. Maximum Subarray

Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
Example:

Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.

*******************************************************************
Solution:
Use Kadane Algorithm

Language: Java

public int maxSubArray(int[] nums) 
{
	if(nums == null || nums.length == 0)
		return 0;
	int maxLocal  = nums[0];
	int maxGlobal = nums[0];
	int lengthOfNums = nums.length;
   
	for(int i=1; i<lengthOfNums; i++)
	{
		maxLocal = Math.max(maxLocal+nums[i], nums[i]);
		maxGlobal = Math.max(maxGlobal, maxLocal);
	}
	return maxGlobal;
}

