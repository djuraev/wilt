300. Longest Increasing Subsequence
Medium

Given an unsorted array of integers, find the length of longest increasing subsequence.

Example:

Input: [10,9,2,5,3,7,101,18]
Output: 4 
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. 

Note:

    There may be more than one LIS combination, it is only necessary for you to return the length.
    Your algorithm should run in O(n2) complexity.
***************************************

public int lengthOfLIS(int[] nums) {
	if(nums == null || nums.length == 0)
		return 0;
	int n = nums.length;
	int[] aux = new int[n];
	int maxLength = 1;
	for(int i=0; i<n; i++)
		aux[i] = 1;
	for(int i=1; i<n; i++)
	{
		for(int j=0; j<i; j++)
		{
			if(nums[j] < nums[i] && aux[i] <= aux[j])
			{
				aux[i] = aux[j]+1;
				maxLength = Math.max(maxLength, aux[i]);
			}
		}
	}
	return maxLength;
}