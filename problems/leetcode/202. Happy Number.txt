202. Happy Number

Write an algorithm to determine if a number n is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, 
replace the number by the sum of the squares of its digits, and repeat the process until the number 
equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. 
Those numbers for which this process ends in 1 are happy numbers.

Return True if n is a happy number, and False if not.


************************************************************************
Use HashSet to detect if there is cycle while finding happy number.

Language: Java

public boolean isHappy(int n) {
        if(n==0)
            return true;
        Set<Integer> seen = new HashSet<>();
      
        while(!seen.contains(n))
        {
            seen.add(n);
            int squareSum = getSumOfSquare(n);
            if(squareSum == 1)
                return true;
            n = squareSum;
        }
        return false;
    }
    private int getSumOfSquare(int number){
        int result = 0;
        int copy = number;
        while(copy > 0)
        {
            int lastDigit = copy % 10;
            result += lastDigit * lastDigit;
            copy /= 10;
        }
        return result;
    }