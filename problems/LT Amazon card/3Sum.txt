 3Sum

Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]


 
 *************************************************
 public List<List<Integer>> threeSum(int[] nums) {
        if(nums == null || nums.length < 3)
            return Collections.emptyList();
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        int n = nums.length;
        for(int i=0; i<n-2;i++)
        {
            if(i>0 && nums[i-1] == nums[i])
                continue;
            int target = -nums[i];
            int left = i+1, right = n-1;
            while(left < right)
            {
                int sum = nums[left] + nums[right];
                if(sum == target)
                {
                    List<Integer> triplet = new ArrayList<>();
                    triplet.add(nums[i]);
                    triplet.add(nums[left]);
                    triplet.add(nums[right]);
                    result.add(triplet);
                    left++;
                    right--;
                    while(left<right && nums[left] == nums[left-1])
                        left++;
                    while(left<right && nums[right] == nums[right+1])
                        right--;
                }
                else if(sum > target)
                    right--;
                else
                    left++;
            }
        }
        return result;
    }