



public int strStr(String haystack, String needle) 
{
	int m = haystack.length();
	int n = needle.length();
	int[] lps = computeLPS(needle);
	int i=0, j=0;
	while(i<m && j<n)
	{
		if(haystack.charAt(i) == needle.charAt(j))
		{
			i++;
			j++;
		}
		else
		{
			if(j==0)
			{
				i++;
			}
			else
			{
				j = lps[j-1];
			}
		}
	}
	if(j == n)
		return i-n;
	return -1;
}
private int[] computeLPS(String pattern)
{
	int m = pattern.length();
	int[] lps = new int[m];
	int i=1, j=0;
	while(i < m)
	{
		if(pattern.charAt(i) == pattern.charAt(j))
		{
			lps[i] = j+1;
			j++;
			i++;
		}
		else
		{
			if(j == 0)
			{
				i++;
			}
			else
			{
				j = lps[j-1];
			}
		}
	}
	return lps;
}